package boot;
import org.lwjgl.LWJGLException;
import org.lwjgl.Sys;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;
  
public class Main {
	private static int sx = 20;
    private static int sy = 20;
    private static int width = sx*32;
    private static int height = 600;
    
    public static void main(String[] argv) {
    	
    	
    	
    	initGL();
    	
    	//MAIN GAME LOOP
    	while (!Display.isCloseRequested()) {
            // Clear the screen and depth buffer
            GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);  
            updateSky();
      
            Display.update();
        }
    }
    public static void updateSky() {
    	long time = Sys.getTime()/1000 % 100;
    	time-=53;
    	System.out.println(time);
    	float red = time/100;
    	
    	GL11.glClearColor(red,0.0f,red,0.0f);
    	
    }
    public static void initGL()
    {
    	try {
            Display.setDisplayMode(new DisplayMode(width,height));
            Display.setFullscreen(true);
            Display.create();
        } catch (LWJGLException e) {
            e.printStackTrace();
            System.exit(0);
        }    
            Display.setTitle("Isometric Engine");
                    
            
            GL11.glEnable(GL11.GL_TEXTURE_2D);//This game uses 2D sprites                        
            GL11.glClearColor(0.0f, 0.0f, 0.0f, 0.0f);//makes the background black                 
            // enable alpha blending
            GL11.glEnable(GL11.GL_BLEND);
            GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);         
            GL11.glViewport(0,0,width,height);
            GL11.glMatrixMode(GL11.GL_MODELVIEW); 
            GL11.glMatrixMode(GL11.GL_PROJECTION);
            GL11.glLoadIdentity();
            GL11.glOrtho(0, width, height, 0, 1, -1);
            GL11.glMatrixMode(GL11.GL_MODELVIEW);  
    	
    }
    
}